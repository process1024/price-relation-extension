---
description: 浏览器扩展开发模式和最佳实践
---

# 浏览器扩展开发模式

## 内容脚本最佳实践 ([content.tsx](mdc:src/contents/index.tsx))

- 内容脚本在网页上下文中运行
- 操作 DOM 元素前始终检查其是否存在
- 安全使用 `document.querySelector` 并进行空值检查
- 避免污染宿主页面的全局命名空间
- 使用消息传递与弹窗/后台脚本通信

## 弹窗脚本模式 ([popup.tsx](mdc:src/popup.tsx))

- 弹窗脚本创建扩展的用户界面
- 保持弹窗轻量级和响应迅速
- 使用 Chrome 存储 API 存储持久数据
- 优雅处理弹窗关闭/重新打开

## Chrome API 使用

- 始终用 try-catch 块包装 Chrome API 调用
- 适当时检查 `chrome.runtime.lastError`
- 对支持的 Chrome API 使用 async/await 模式
- 在 manifest 中请求最小权限（目前有 `https://*/*`）

## 安全考虑

- 验证从网页接收的所有数据
- 注入前净化 HTML 内容
- 使用内容安全策略限制
- 谨慎使用 eval() 和动态脚本执行

## 性能提示

- 对昂贵的操作如 DOM 查询进行防抖
- 使用事件委托而不是多个事件监听器
- 适当时清理事件监听器和观察者
- 最小化内容脚本执行开销

## 以图搜同款特定功能

这是一个以图搜同款浏览器扩展，需要考虑：

- 检测页面中的图片元素并添加悬停交互
- 智能过滤商品图片与装饰性图片
- 实现平滑的按钮显示/隐藏动画效果
- 处理不同图片格式和URL获取
- 构建搜索引擎查询链接并在新标签页打开
- 优化性能避免影响页面正常功能
